apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.management.container_metadata.management_name }}
  namespace: {{ .Values.namespace }}
  labels:
    run: {{ .Values.management.service.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: {{ .Values.management.service.name }}
  template:
    metadata:
      labels:
        run: {{ .Values.management.service.name }}
    spec:
      serviceAccountName: {{ .Values.roles.serviceAccount }}
      automountServiceAccountToken: true
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
      containers:
        - name: "{{ .Values.management.container_metadata.management_console_name }}"
          image: "{{ .Values.syntasaManagementConsoleImage }}"
          imagePullPolicy: "Always"
          ports:
            - name: "ui-port"
              containerPort: 10080
        - name: "{{ .Values.management.container_metadata.management_name }}"
          image: "{{ .Values.syntasaManagementImage }}"
          imagePullPolicy: "Always"
          ports:
            - name: "mgmt-port"
              containerPort: 10090
          env:
            - name: "SYNTASA_HOSTNAME"
            {{- if .Values.haproxy.service.loadBalancerHostname }}
              value: {{ .Values.haproxy.service.loadBalancerHostname }}
            {{- else }}
              value: {{ .Values.haproxy.service.loadBalancerIP }}
            {{- end }}
            - name: "SYNTASA_NAMESPACE"
              value: "{{ .Values.namespace }}"
        - name: "{{ .Values.management.container_metadata.management_auth_name }}"
          image: "{{ .Values.syntasaManagementAuthImage }}"
          imagePullPolicy: "Always"
          ports:
            - name: "mgmt-auth-port"
              containerPort: 10100
          env:
            - name: "SYNTASA_HOSTNAME"
            {{- if .Values.haproxy.service.loadBalancerHostname }}
              value: {{ .Values.haproxy.service.loadBalancerHostname }}
            {{- else }}
              value: {{ .Values.haproxy.service.loadBalancerIP }}
            {{- end }}
            - name: "SYNTASA_NAMESPACE"
              value: "{{ .Values.namespace }}"
        - name: ubbagent
          image: "{{ .Values.ubbAgentImage }}"
          env:
            - name: AGENT_CONFIG_FILE
              value: "/etc/ubbagent/config.yaml"
            - name: AGENT_LOCAL_PORT
              value: "4567"
            - name: AGENT_ENCODED_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reportingSecret }}
                  key: reporting-key
            - name: AGENT_CONSUMER_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reportingSecret }}
                  key: consumer-id
          volumeMounts:
            - name: ubbagent-config
              mountPath: /etc/ubbagent
      volumes:
        - name: ubbagent-config
          configMap:
            name: ubbagent-config
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.management.service.name }}
  namespace: {{ .Values.namespace }}
  labels:
    run: {{ .Values.management.service.name }}
spec:
  selector:
    run: {{ .Values.management.service.name }}
  ports:
    - name: ui-port
      port: 10080
    - name: mgmt-port
      port: 10090
    - name: mgmt-auth-port
      port: 10100
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.management.ingress.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.class: "haproxy"
    ingress.kubernetes.io/ssl-redirect: "true"
  labels:
    run: {{ .Values.management.service.name }}
spec:
  rules:
    - http:
        paths:
          - path: /management
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.management.service.name }}
                port:
                  number: 10080
          - path: /syntasa-management
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.management.service.name }}
                port:
                  number: 10090
          - path: /syntasa-management/auth
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.management.service.name }}
                port:
                  number: 10100
{{- if .Values.haproxy.service.loadBalancerHostname }}
      host: {{ .Values.haproxy.service.loadBalancerHostname }}
{{- end }}
  tls:
    - secretName: {{ .Values.management.ingress.tls.secretName }}
      hosts:
      {{- if .Values.haproxy.service.loadBalancerHostname }}
        - {{ .Values.haproxy.service.loadBalancerHostname }}
      {{- end }}
